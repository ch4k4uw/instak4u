// Mocks generated by Mockito 5.3.2 from annotations
// in presenter/test/feed/feed_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:domain/feed.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:presenter/src/common/uc/perform_logout.dart' as _i6;
import 'package:presenter/src/feed/interaction/feed_state.dart' as _i8;
import 'package:presenter/src/feed/uc/find_all_events.dart' as _i3;
import 'package:presenter/src/feed/uc/find_event_details.dart' as _i5;

import '../ui_state_observer.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEvent_0 extends _i1.SmartFake implements _i2.Event {
  _FakeEvent_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FindAllEvents].
///
/// See the documentation for Mockito's code generation for more information.
class MockFindAllEvents extends _i1.Mock implements _i3.FindAllEvents {
  @override
  _i4.Future<List<_i2.Event>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Event>>.value(<_i2.Event>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i2.Event>>.value(<_i2.Event>[]),
      ) as _i4.Future<List<_i2.Event>>);
}

/// A class which mocks [FindEventDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockFindEventDetails extends _i1.Mock implements _i5.FindEventDetails {
  @override
  _i4.Future<_i2.Event> call({required String? id}) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i2.Event>.value(_FakeEvent_0(
          this,
          Invocation.method(
            #call,
            [],
            {#id: id},
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Event>.value(_FakeEvent_0(
          this,
          Invocation.method(
            #call,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.Event>);
}

/// A class which mocks [PerformLogout].
///
/// See the documentation for Mockito's code generation for more information.
class MockPerformLogout extends _i1.Mock implements _i6.PerformLogout {
  @override
  _i4.Future<void> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [UiStateObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockUiStateObserver extends _i1.Mock
    implements _i7.UiStateObserver<_i8.FeedState> {
  @override
  void call(_i8.FeedState? event) => super.noSuchMethod(
        Invocation.method(
          #call,
          [event],
        ),
        returnValueForMissingStub: null,
      );
}
