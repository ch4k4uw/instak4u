// Mocks generated by Mockito 5.3.2 from annotations
// in presenter/test/event/event_details_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:presenter/src/common/uc/perform_logout.dart' as _i5;
import 'package:presenter/src/common/uc/share_event.dart' as _i4;
import 'package:presenter/src/event/interaction/event_details_state.dart'
    as _i7;
import 'package:presenter/src/event/uc/perform_check_in.dart' as _i2;

import '../ui_state_observer.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PerformCheckIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockPerformCheckIn extends _i1.Mock implements _i2.PerformCheckIn {
  @override
  _i3.Future<void> call({required String? eventId}) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#eventId: eventId},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [ShareEvent].
///
/// See the documentation for Mockito's code generation for more information.
class MockShareEvent extends _i1.Mock implements _i4.ShareEvent {
  @override
  _i3.Future<String> call({required String? eventId}) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#eventId: eventId},
        ),
        returnValue: _i3.Future<String>.value(''),
        returnValueForMissingStub: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}

/// A class which mocks [PerformLogout].
///
/// See the documentation for Mockito's code generation for more information.
class MockPerformLogout extends _i1.Mock implements _i5.PerformLogout {
  @override
  _i3.Future<void> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [UiStateObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockUiStateObserver extends _i1.Mock
    implements _i6.UiStateObserver<_i7.EventDetailsState> {
  @override
  void call(_i7.EventDetailsState? event) => super.noSuchMethod(
        Invocation.method(
          #call,
          [event],
        ),
        returnValueForMissingStub: null,
      );
}
